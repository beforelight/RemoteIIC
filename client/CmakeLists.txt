cmake_minimum_required(VERSION 3.19)

project(client)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

if ("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
    add_compile_options(-O2)
else ()
#    add_compile_options(-g)
endif ()

#serial部分的
if (1)
    include_directories(serial/include)
    ## Sources
    set(serial_SRCS
            serial/src/serial.cc
            serial/include/serial/serial.h
            serial/include/serial/v8stdint.h
            )
    if (APPLE)
        # If OSX
        list(APPEND serial_SRCS serial/src/impl/unix.cc)
        list(APPEND serial_SRCS serial/src/impl/list_ports/list_ports_osx.cc)
    elseif (UNIX)
        # If unix
        list(APPEND serial_SRCS serial/src/impl/unix.cc)
        list(APPEND serial_SRCS serial/src/impl/list_ports/list_ports_linux.cc)
    else ()
        # If windows
        list(APPEND serial_SRCS serial/src/impl/win.cc)
        list(APPEND serial_SRCS serial/src/impl/list_ports/list_ports_win.cc)
    endif ()
    add_library(serial ${serial_SRCS})
    link_libraries(serial)
    if(APPLE)
        target_link_libraries(serial ${FOUNDATION_LIBRARY} ${IOKIT_LIBRARY})
    elseif(UNIX)
        target_link_libraries(serial rt pthread)
    else()
        target_link_libraries(serial setupapi)
    endif()
endif ()

set(client_src client.cpp conf.cpp)
add_executable(test test.cpp ${client_src})

